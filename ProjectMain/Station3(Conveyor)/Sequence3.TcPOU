<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Sequence3" Id="{e15a6fb5-808f-4738-8ea3-952c583c643e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Sequence3
VAR_INPUT
	Execute : BOOL;
	nState : INT;
END_VAR
VAR_OUTPUT
	Error : BOOL;
END_VAR
VAR
	
	fbMoveVelocity: MC_MoveVelocity;
	bStopExecute: BOOL;
	bResetExecute: BOOL;
	bPowerExecute: BOOL;
	bVelocityExecute : BOOL;
	MC_MoveAbsolute1: MC_MoveAbsolute;
	fbStop: MC_Stop;
END_VAR
VAR_IN_OUT
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF Execute THEN
			
		fbMoveVelocity(
			Axis:= GVL_Conveyer.ConveyerAxis, 
			Execute:= bVelocityExecute, 
			Velocity:= 800, 
			Direction := MC_Negative_Direction
			);
		
		fbStop(
			Axis:= GVL_Conveyer.ConveyerAxis, 
			Execute:= bStopExecute);	
			
CASE nState OF
	
0: // Call velocity move
	IF NOT GVL_Conveyer.bSensor THEN
		bVelocityExecute := TRUE;
		nState := 1;
	END_IF
	
1: // Set vel move low
	IF (GVL_Conveyer.ConveyerAxis.NcToPlc.ActVelo > 1) OR (GVL_Conveyer.ConveyerAxis.NcToPlc.ActVelo < -1) THEN
		bVelocityExecute := FALSE;
		nState := 5;
	END_IF
	
5: // Call stop movement when something is there
	IF GVL_Conveyer.bSensor THEN
		GVL_Conveyer.bConveyerReadyToPick := TRUE;
		bStopExecute := TRUE;
		nState := 10;
	END_IF
	
10: // Check if stop is complete
	IF fbStop.Done THEN
		nState := 15;
		bStopExecute := FALSE;
	END_IF
	
15: // If sensor low, then call ready to move high
	IF NOT GVL_Conveyer.bSensor AND GVL_conveyer.bConveyerReadyToMove THEN
		GVL_Conveyer.bConveyerReadyToPick := FALSE;
		
		nState := 0;
	END_IF
			
999:
	IF NOT fbMoveVelocity.Error AND NOT fbStop.Error THEN
		
		nState := 0;
		Error := FALSE;
	ELSE
		Error := TRUE;
	END_IF
END_CASE
ELSE
	nState := 0;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="Sequence3">
      <LineId Id="823" Count="55" />
      <LineId Id="899" Count="1" />
      <LineId Id="611" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>