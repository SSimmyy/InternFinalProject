<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Main2" Id="{cef6c1f9-2a01-4b71-81db-f7ed4deb6965}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main2
VAR	
	Sequence2 				: Sequence2;
	Reset2					: FB_ResetAllAxis;
	fbStopAll				: FB_StopAll;
	fbPowerAll				: FB_PowerAll;
	bSequenceExecute		: BOOL;
	bUserIncrementStep		: BOOL;
	bUserInfiniteMovement	: BOOL;
	bResetExecute			: BOOL;
	MainState 				: MainStateAxis_enum;
	mainCommands			: MainCommands_typ;
	XYParamaters			: XYParams_typ;
	
	nSequenceState			: INT;
	bStopAll: BOOL;
	bPowerEnable: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[Sequence2(
	Execute 				:= bSequenceExecute,
	bUserIncrementStep 		:= XYParamaters.bUserIncrementStep,
	bUserInfiniteMovement 	:= XYParamaters.bUserInfiniteMovement,
);

fbPowerAll(
	Enable := bPowerEnable
	);

Reset2(
	Execute := bResetExecute
	);
	
fbStopAll(
		Execute := //bStopAll
		);
		
		
CASE MainState OF
	
	MSA_DISABLED:
		mainCommands.Start := FALSE;
		mainCommands.Stop := FALSE;
		
	IF mainCommands.Enable THEN
		mainCommands.Disable := FALSE;
		mainState := MSA_INITIALIZING;
	END_IF
		
	MSA_INITIALIZING:
		XYParamaters.bUserIncrementStep := FALSE;
		XYParamaters.bUserInfiniteMovement := TRUE;
		XYParamaters.fVelFactor := 1.0;
		GVL_XTS.moversRelease[1] := TRUE;
		GVL_XTS.moversRelease[2] := TRUE;
		GVL_XTS.moversRelease[3] := TRUE;
		
		IF MainCommands.Disable THEN
			MainCommands.Enable		:=FALSE;
			MainState:= MS_DISABLED;
		ELSIF MainCommands.Stop THEN
			MainCommands.Stop		:=FALSE;
			MainCommands.Disable	:=TRUE;
			MainCommands.Start		:=FALSE;
			MainState	:= MS_DISABLED;			
			
		ELSIF MainCommands.Enable THEN
			IF GVL_XTS.moversRelease[1] AND GVL_XTS.moversRelease[2] AND GVL_XTS.moversRelease[3] THEN
				GVL_XTS.moversRelease[1] := FALSE;
				GVL_XTS.moversRelease[2] := FALSE;
				GVL_XTS.moversRelease[3] := FALSE;
				bResetExecute := FALSE;
				bPowerEnable := FALSE;
        	MainState 	:= MSA_ENABLING;
		END_IF
		END_IF
		
	MSA_ENABLING:
		bResetExecute := TRUE;
			IF MainCommands.Disable THEN
				bResetExecute := FALSE;
				MainCommands.Enable		:=FALSE;
            	MainState	:= MSA_DISABLED;
			ELSIF MainCommands.Stop	 THEN
				bResetExecute := FALSE;
				MainCommands.Start		:=FALSE;
				MainState	:= MSA_STOPPING;
			ELSIF MainCommands.Enable THEN
				IF Reset2.Done THEN
					
					bPowerEnable := TRUE;
					IF fbPowerAll.Done THEN	
							MainState 	:= MSA_ENABLED;	
					END_IF	
				END_IF	
			END_IF

	MSA_ENABLED:
		
		MainCommands.Stop := FALSE;
		
		IF MainCommands.Start THEN
			MainState := MSA_RUN;
		ELSIF MainCommands.Disable THEN
            MainCommands.Enable := FALSE;
            MainState           := MSA_STOPPING;
        END_IF
			
	MSA_RUN:
	IF GVL_XY.stAxis[1].NcToPlc.ErrorCode = 0 AND GVL_XY.stAxis[2].NcToPlc.ErrorCode = 0 AND GVL_XY.stSlaveAxis[1].NcToPlc.ErrorCode = 0 THEN
			bSequenceExecute := TRUE;
			
			IF Sequence2.Error THEN
				MainState := MSA_STOPPING;
			END_IF
			
			IF MainCommands.Stop THEN
				bSequenceExecute := FALSE;
				MainCommands.Start := FALSE;
				MainState          := MSA_STOPPING;
			ELSIF MainCommands.Disable THEN
				bSequenceExecute := FALSE;
				MainCommands.Enable := FALSE;
				MainState           := MSA_STOPPING;
			END_IF
		ELSE
			MainCommands.Enable := FALSE;
			MainCommands.Enable := FALSE;
			MainCommands.Disable := TRUE;
			bSequenceExecute := FALSE;
			MainState := MSA_DISABLED;
		END_IF
		
		
	MSA_STOPPING:
		bUserInfiniteMovement := FALSE;
		bUserIncrementStep := FALSE;
		bSequenceExecute := FALSE;
		
		bStopAll := TRUE;
		
		IF bStopAll THEN
			bStopAll := FALSE;
			MainState := MSA_STOPPED;
		END_IF
		
	MSA_STOPPED:
		IF MainCommands.Disable THEN
            MainCommands.Enable := FALSE;
			MainCommands.Start:=FALSE;
            MainState           := MSA_DISABLING;
        ELSIF MainCommands.Start THEN
            MainCommands.Stop := FALSE;
            MainState         := MSA_ENABLING;
        END_IF
		
	MSA_DISABLING:
			bPowerEnable := FALSE;
			bUserIncrementStep := TRUE;
			bUserIncrementStep := FALSE;
			bSequenceExecute := FALSE;
			
			bStopAll := TRUE;
			
			IF fbStopAll.Done THEN
				bStopAll := FALSE;
				MainState := MSA_DISABLED;
			END_IF
		
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="Main2">
      <LineId Id="2030" Count="4" />
      <LineId Id="2178" Count="1" />
      <LineId Id="2181" Count="0" />
      <LineId Id="2180" Count="0" />
      <LineId Id="2039" Count="0" />
      <LineId Id="2038" Count="0" />
      <LineId Id="2041" Count="0" />
      <LineId Id="2040" Count="0" />
      <LineId Id="2153" Count="0" />
      <LineId Id="2155" Count="1" />
      <LineId Id="2154" Count="0" />
      <LineId Id="2043" Count="0" />
      <LineId Id="2893" Count="0" />
      <LineId Id="2028" Count="0" />
      <LineId Id="2046" Count="0" />
      <LineId Id="2049" Count="0" />
      <LineId Id="2053" Count="4" />
      <LineId Id="2059" Count="0" />
      <LineId Id="2073" Count="0" />
      <LineId Id="2066" Count="0" />
      <LineId Id="2063" Count="0" />
      <LineId Id="2067" Count="0" />
      <LineId Id="2069" Count="1" />
      <LineId Id="2756" Count="1" />
      <LineId Id="2755" Count="0" />
      <LineId Id="2074" Count="0" />
      <LineId Id="2079" Count="7" />
      <LineId Id="2744" Count="0" />
      <LineId Id="2087" Count="0" />
      <LineId Id="2933" Count="4" />
      <LineId Id="2932" Count="0" />
      <LineId Id="2088" Count="0" />
      <LineId Id="2938" Count="0" />
      <LineId Id="2078" Count="0" />
      <LineId Id="2075" Count="2" />
      <LineId Id="2095" Count="0" />
      <LineId Id="2888" Count="0" />
      <LineId Id="2096" Count="2" />
      <LineId Id="2889" Count="0" />
      <LineId Id="2099" Count="2" />
      <LineId Id="2104" Count="0" />
      <LineId Id="2240" Count="0" />
      <LineId Id="2201" Count="0" />
      <LineId Id="2123" Count="0" />
      <LineId Id="2750" Count="0" />
      <LineId Id="2125" Count="0" />
      <LineId Id="2106" Count="0" />
      <LineId Id="2103" Count="0" />
      <LineId Id="2107" Count="0" />
      <LineId Id="2048" Count="0" />
      <LineId Id="2109" Count="4" />
      <LineId Id="2117" Count="2" />
      <LineId Id="2116" Count="0" />
      <LineId Id="2108" Count="0" />
      <LineId Id="2120" Count="0" />
      <LineId Id="2905" Count="0" />
      <LineId Id="2853" Count="6" />
      <LineId Id="2890" Count="0" />
      <LineId Id="2860" Count="2" />
      <LineId Id="2891" Count="0" />
      <LineId Id="2863" Count="1" />
      <LineId Id="2851" Count="0" />
      <LineId Id="2906" Count="0" />
      <LineId Id="2908" Count="4" />
      <LineId Id="2907" Count="0" />
      <LineId Id="2133" Count="0" />
      <LineId Id="2130" Count="0" />
      <LineId Id="2140" Count="0" />
      <LineId Id="2142" Count="0" />
      <LineId Id="2144" Count="0" />
      <LineId Id="2141" Count="0" />
      <LineId Id="2147" Count="0" />
      <LineId Id="2158" Count="2" />
      <LineId Id="2848" Count="0" />
      <LineId Id="2161" Count="1" />
      <LineId Id="2148" Count="0" />
      <LineId Id="2163" Count="0" />
      <LineId Id="2165" Count="6" />
      <LineId Id="2164" Count="0" />
      <LineId Id="2131" Count="0" />
      <LineId Id="2174" Count="1" />
      <LineId Id="2203" Count="0" />
      <LineId Id="2205" Count="0" />
      <LineId Id="2207" Count="2" />
      <LineId Id="2211" Count="2" />
      <LineId Id="2215" Count="0" />
      <LineId Id="2214" Count="0" />
      <LineId Id="2219" Count="0" />
      <LineId Id="2047" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>